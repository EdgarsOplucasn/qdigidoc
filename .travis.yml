language: c++
sudo: false
dist: trusty
osx_image: xcode8.3
services:
- docker
matrix:
  include:
  - os: osx
    env: IMAGE=OSX
    sudo: true
  - os: linux
    env: IMAGE=ubuntu:16.04
  - os: linux
    env: IMAGE=ubuntu:17.04
  - os: linux
    env: IMAGE=32bit/ubuntu:16.04
env:
  global:
  - BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}
  - secure: vX847To3osqI7JytpiH5r6xlXS9r8KCNCPP3pu2yvGxAgmz917xG1lrqRGOReoCe/08hkh+gMA9vLjIyUwDlUvZuKJr5g5iPfa85/m9iPe24DLOlf9zLI5It0MFNTLYFQ5DXFmX77+/lcB9ypDQtE5w9XK+xZjyC9xr9viye77E=

before_install:
- git submodule update --init --recursive && if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    brew install --force qt5 openssl;
    curl --location "https://github.com/open-eid/libdigidoc/releases/download/v3.10.2/libdigidoc_3.10.1.1213.pkg" -o libdigidoc.pkg;
    curl --location "https://github.com/open-eid/libdigidocpp/releases/download/v3.12.2/libdigidocpp_3.12.2.1329.pkg" -o libdigidocpp.pkg;
    curl --location "https://github.com/open-eid/esteid-pkcs11/releases/download/v3.10.1/esteid-pkcs11_3.10.1.64.pkg" -o esteid-pkcs11.pkg;
    sudo installer -verboseR -pkg libdigidoc.pkg -target /;
    sudo installer -verboseR -pkg libdigidocpp.pkg -target /;
    sudo installer -verboseR -pkg esteid-pkcs11.pkg -target /;
  fi
script: if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    mkdir build && cd build && cmake -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_EXE_LINKER_FLAGS="-F/Library/Frameworks" ..;
    make zipdebug macdeployqt zip && cd ..;
  else
    docker run -e BUILD_NUMBER=${TRAVIS_BUILD_NUMBER} -e DEBFULLNAME="Travis" -e DEBEMAIL="travis-ci@travis" -e COVERITY_SCAN_TOKEN=${COVERITY_SCAN_TOKEN} -e TRAVIS_BRANCH=${TRAVIS_BRANCH} -e IMAGE=${IMAGE} -v $(pwd):$(pwd) -t "${IMAGE}" /bin/bash -c "cd $(pwd);"'
      apt-get update -qq;
      apt-get install -y apt-transport-https curl dh-make devscripts dpkg-dev cdbs cmake libldap2-dev libpcsclite-dev libssl-dev qtbase5-dev qttools5-dev qttools5-dev-tools gettext git curl wget ruby;
      curl https://installer.id.ee/media/install-scripts/ria-public.key | apt-key add -;
      curl https://installer.id.ee/media/install-scripts/C6C83D68.pub | apt-key add -;
      echo "deb http://installer.id.ee/media/ubuntu/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/repo.list;
      apt-get update -qq;
      apt-get install -y libdigidocpp-dev;
      export VERSION=$(grep project CMakeLists.txt | egrep -o "([0-9]{1,}\.)+[0-9]{1,}").${BUILD_NUMBER};
      dh_make --createorig --addmissing --defaultless -y -p qdigidoc_${VERSION};
      dch --distribution $(lsb_release -cs) -v ${VERSION} "Release ${VERSION}.";
      dpkg-buildpackage -rfakeroot -us -uc;
      if [ "${IMAGE}" = "ubuntu:16.04" ]; then
        export COVERITY_SCAN_PROJECT_NAME="open-eid/libdigidocpp";
        export COVERITY_SCAN_NOTIFICATION_EMAIL="raul@metsma.ee";
        export COVERITY_SCAN_BRANCH_PATTERN=coverity_scan;
        export COVERITY_SCAN_BUILD_COMMAND_PREPEND="cmake -DBREAKPAD=\"\" .";
        export COVERITY_SCAN_BUILD_COMMAND=make;
        wget https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh;
        bash travisci_build_coverity_scan.sh;
      fi;
      git clean -d -x -f';
  fi

before_deploy:
- export VERSION=${TRAVIS_TAG:1}
- git clean -d -x -f
- cd ..
- mv qdigidoc qdigidoc-${VERSION}
- tar czf qdigidoc-${VERSION}.tar.gz --exclude-vcs qdigidoc-${VERSION}
deploy:
  provider: releases
  api_key:
    secure: LS4Q49BiN1OCs0LMFf8jACtFWnqHEgIP2k+Y7/YWhzp/KBZ8U+45z2EA37NbmYM2GFYCcXLApyKZYWCHq42vz5LQYKLk9/08RU60Xo6jnNUwBhnc0MTj1JzSfMITaWqwJ7LCvJZa1QJnA2/rQuYtVxakzQF9OGxHEmZH0Nujce4=
  file: qdigidoc-${VERSION}.tar.gz
  skip_cleanup: true
  on:
    tags: true
    condition: "$TRAVIS_OS_NAME = linux"
